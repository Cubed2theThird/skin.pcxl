<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="Viewtype_530_WallPoster">
		<control type="group">
			<visible>Control.IsVisible(530)</visible>
			<animation type="WindowClose">
				<effect type="slide" start="0" end="-1000" center="auto" tween="Cubic" easing="in" time="500"/>
				<!--><effect type="fade" start="0" end="100" time="200"/><!-->
			</animation>

			<animation type="Conditional" condition="Control.HasFocus(9050)">
				<effect type="slide" start="0" end="0,800" delay="100" time="500" tween="cubic" easing="inout" />
				<effect type="zoom" start="100" end="90" center="auto" time="200" tween="cubic" easing="inout" />
			</animation>
			<!-- List -->
			<control type="panel" id="530">
				<centerleft>50%</centerleft>
				<width>1610</width>
				<top>20</top>
				<height>100%</height>
				<onleft condition="Player.HasVideo">9050</onleft>
				<onleft condition="Player.HasAudio">9051</onleft>
				<onright>60</onright>
				<onright>3000</onright>
				<onup condition="Player.HasVideo">9050</onup>
				<ondown condition="Player.HasAudio">9051</ondown>
				<ondown>530</ondown>
				<pagecontrol>60</pagecontrol>
				<preloaditems>2</preloaditems>
				<orientation>vertical</orientation>
				<viewtype label="31530">list</viewtype>
				<scrolltime tween="sine" easing="inout">360</scrolltime>
				<visible>[String.Contains(Container.Content,movies) | String.Contains(Container.Content,actors) | String.Contains(Container.Content,directors)] + !String.Contains(Container.FolderPath,plugin://plugin.video.netflix)</visible>
				<itemlayout width="230" height="340">
						<control type="image">
							<width>220</width>
							<height>330</height>
							<aspectratio>scale</aspectratio>
							<texture background="true">$INFO[ListItem.Icon]</texture>
						</control>
						<control type="image">
							<width>220</width>
							<height>330</height>
							<texture colordiffuse="$VAR[DiffuseColor]">views/white_100.png</texture>
						</control>
						<include>WatchedIndicator</include>
				</itemlayout>
				<focusedlayout width="230" height="340">
					<control type="group">
						<animation center="auto" condition="Control.HasFocus(530)" easing="inout" effect="zoom" end="110" start="100" time="300" tween="sine">Focus</animation>
						<control type="image">
							<width>220</width>
							<height>330</height>
							<aspectratio>scale</aspectratio>
							<texture background="true">$INFO[ListItem.Icon]</texture>
						</control>
						<control type="image">
							<width>220</width>
							<height>330</height>
							<texture colordiffuse="$VAR[DiffuseColor]">views/white_100.png</texture>
							<animation center="auto" condition="Control.HasFocus(530)" easing="inout" effect="fade" end="0" start="100" time="300" tween="sine">Focus</animation>
							<animation center="auto" condition="Control.HasFocus(530)" easing="inout" effect="fade" end="100" start="0" time="300" tween="sine">UnFocus</animation>
						</control>
						<include>WatchedIndicator</include>
						<control type="image">
							<width>220</width>
							<height>330</height>
							<texture colordiffuse="$VAR[TextColor]" border="11,43,43,11">$VAR[BorderImage]</texture>
							<animation center="auto" condition="Control.HasFocus(530)" easing="inout" effect="fade" end="100" start="0" time="300" tween="sine">Focus</animation>
							<animation center="auto" condition="Control.HasFocus(530)" easing="inout" effect="fade" end="0" start="100" time="300" tween="sine">UnFocus</animation>
							<visible>!Control.HasFocus(60) + !Control.HasFocus(3000) + !SubString(ListItem.Icon,default)</visible>
						</control>
						<control type="button">
							<visible>false</visible>
							<onfocus condition="Container.Column(0)">SetProperty(CurrentColumn,0,home)</onfocus>
							<onfocus condition="Container.Column(1)">SetProperty(CurrentColumn,1,home)</onfocus>
							<onfocus condition="Container.Column(2)">SetProperty(CurrentColumn,2,home)</onfocus>
							<onfocus condition="Container.Column(3)">SetProperty(CurrentColumn,3,home)</onfocus>
							<onfocus condition="Container.Column(4)">SetProperty(CurrentColumn,4,home)</onfocus>
							<onfocus condition="Container.Column(5)">SetProperty(CurrentColumn,5,home)</onfocus>
							<onfocus condition="Container.Column(6)">SetProperty(CurrentColumn,6,home)</onfocus>
							<onfocus condition="Container.Column(7)">SetProperty(CurrentColumn,7,home)</onfocus>
							<onfocus condition="Container.Row(0)">SetProperty(CurrentRow,0,home)</onfocus>
							<onfocus condition="Container.Row(1)">SetProperty(CurrentRow,1,home)</onfocus>
							<onfocus condition="Container.Row(2)">SetProperty(CurrentRow,2,home)</onfocus>
						</control>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>
</includes>