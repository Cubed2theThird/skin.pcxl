<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!--> home <!-->
	<backgroundcolor>FF500000</backgroundcolor>
	<onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=9000&amp;levels=0&amp;group=mainmenu|horizontal)</onload>
	<onload>XBMC.RunScript(script.favourites)</onload>
	<onload condition="!Skin.HasSetting(installed)|Skin.String(DashboardToggle,Blank)">ReplaceWindow(9085)</onload>

	<onload condition="[Skin.String(DashboardToggle, Netflix)] + !Skin.HasSetting(KioskMode)">SetFocus(9050)</onload>
	<onload condition="![Skin.String(DashboardToggle, Netflix)]">SetFocus(9000)</onload>

	<onload condition="![Library.HasContent(Movies) | Library.HasContent(TVShows)]">Skin.Reset(showMoviegroup)</onload>
	<onload condition="![Library.HasContent(Music)]">Skin.Reset(showMusicgroup)</onload>

	<!--><onload condition="![Library.HasContent(Movies) | Library.HasContent(TVShows)]">Skin.SetString(DashboardToggle, Horizontal)</onload><!-->

	<onload condition="String.IsEmpty(Skin.String(MusicToggle))">Skin.SetString(MusicToggle, 1)</onload>
	<onload condition="String.IsEmpty(Skin.String(MusicBackgroundToggle))">Skin.SetString(MusicBackgroundToggle, FM)</onload>

	<onload condition="Window.Previous(Startup) + Skin.String(DashboardToggle, Game)">Control.Move(1,0)</onload>

	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(1) + !Window.Previous(Startup)">Control.Move(1,1)</onload>
	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(3) + !Window.Previous(Startup)">Control.Move(1,-1)</onload>
	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(4) + !Window.Previous(Startup)">Control.Move(1,-2)</onload>
	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(99) + !Window.Previous(Startup)">Control.Move(1,-3)</onload>

	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + ![Skin.HasSetting(showMoviegroup) + Skin.HasSetting(showMusicgroup)] + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(99) + !Window.Previous(Startup)">Control.Move(1,-1)</onload>

	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(1)">Control.Move(1,1)</onunload>
	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(3)">Control.Move(1,-1)</onunload>
	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(4)">Control.Move(1,-2)</onunload>
	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(99)">Control.Move(1,-3)</onunload>

	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + ![Skin.HasSetting(showMoviegroup) + Skin.HasSetting(showMusicgroup)] + !String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(99)">Control.Move(1,-1)</onunload>

	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(3) + !Window.Previous(Startup)">Control.Move(1,-1)</onload>
	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(4) + !Window.Previous(Startup)">Control.Move(1,-2)</onload>
	<onload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(99) + !Window.Previous(Startup)">Control.Move(1,-3)</onload>

	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(3)">Control.Move(1,-1)</onunload>
	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(4)">Control.Move(1,-2)</onunload>
	<onunload condition="!Window.Previous(Startup) + Skin.String(DashboardToggle, Game) + String.IsEmpty(Window(Home).Property(favourite.1.Path)) + Container(1).HasFocus(99)">Control.Move(1,-3)</onunload>
	<controls>

		<control type="list" id="100">
			<top>-1000</top>
			<onfocus>SetFocus(9000)</onfocus>
			<itemlayout height="155" width="365"/>
			<focusedlayout height="155" width="365"/>
			<content>
				<include>skinshortcuts-mainmenu</include>
			</content>
		</control>

		<control type="list" id="101">
			<top>-1000</top>
			<itemlayout height="155" width="365"/>
			<focusedlayout height="155" width="365"/>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>

		<include>WindowBackgroundImage</include>

		<!--> Main <!-->
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,TV)">TVLayout</include>
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,Dashboard)">DashboardLayout</include>
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,Game)">GameLayout</include>
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,Android)">AndroidLayout</include>
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,Netflix)">NetflixLayout</include>
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,Retroarch)">RetroarchLayout</include>	
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,Horizontal)">HorizontalLayout</include>
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle,Minimal)">MinimalLayout</include>

		<!--> WIP <!-->
		<include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle, Smart)">SmartLayout</include>
		<!--><include condition="!Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) + Skin.String(DashboardToggle, Vertical)">VerticalLayout</include><!-->

		<!--> Kiosk Mode <!-->
		<include condition="Skin.HasSetting(KioskMode) + Skin.HasSetting(installed) | Skin.String(DashboardToggle, Demo)">DemoLayout</include>

		<!--> Logo <!-->
		<include>Logo</include>

		
		

		<control type="label">
			<left>10</left>
			<bottom>50</bottom>
			<width>100%</width>	
			<height>30</height>
			<label>$LOCALIZE[31999]</label>
			<aligny>left</aligny>
			<font>Light27</font>
			<textcolor>$VAR[UnFocusedColor]</textcolor>
			<visible>Skin.HasSetting(DebugInfo)</visible>					
		</control>
		<control type="label">
			<left>10</left>
			<bottom>10</bottom>
			<width>100%</width>	
			<height>30</height>
			<label>$LOCALIZE[31018] $VAR[DashboardToggle]</label>
			<align>left</align>
			<font>Reg48</font>
			<textcolor>$VAR[UnFocusedColor]</textcolor>
			<visible>Skin.HasSetting(DebugInfo)</visible>						
		</control>

	</controls>
</window>